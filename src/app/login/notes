Data binding-sharing data inside a component

1.one way binding

html-> ts or ts->html

ts-component
html-view

1.1component to view (ts->html)
a) string interpolation-{{expression}}
b)property binding-  [attribute name]="property" 


1.2  view to component  (html-> ts)

a)Event Binding  -(event name)="function name()"
b)Event binding using  $(event) - (event name)="function name($event)
c)Event binding using  template referencing variable - #variable name


2)  Two way binding


Angular routing

-to set path for a component
{
    path:value,component:class Name
}


use <router-outle></router-outle> inside root component 


Dependency injection
-------------------------

To share data between two different classes



Angular services
-------------------------------------------

ng g s service name

Angular Directives
-------------------------------------------

To manipulate DOM elements

a)component directives



b)structural directives --> used change thse structure of the html page
1)ngFor
2)ngIf-for validation



Angular forms
a)Template Driven Forms(first design html)--->used for designing the html page


b)Model Driven Forms(first ts design -> html file sesign)--->mainly used for advanced validation methods

1)Reactive FormsModule

i)  form group,array,control
(we can directly add validation methods)
->Add validation
->import reactive forms module


Local Storage

--setItem
--getItem
-removeItem

Parent child relationship

parent to child coomunication -@Input()
child to parent coomunication -@Output()

Angular pipes
{{value-expression  | date [:format[timezones]}}

